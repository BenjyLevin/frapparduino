#!/usr/bin/env node
var debug = require('debug')('app');
var app = require('../app');

app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});

var io = require('socket.io').listen(server);
io.on('connection', function (socket) {
  socket.on('order', function (data) {
    console.log(data);
    if (data['type'] ==  'mocha')
    {
        mocha();
    } 
    else if (data['type'] ==  'caramel')
    {
        caramel();
    }
    else if (data['type'] ==  'coffee')
    {
        coffee();
    }
  });
});

// FRAPPARDUINO STUFF
var five = require("johnny-five"),
    board = new five.Board();

board.on("ready",function(){
    console.log("Board Ready");

    console.log('setting up relay pin 6 - bot1')
    bot1 = new five.Relay(6);

    console.log('setting up relay pin 7 - bot2')
    bot2 = new five.Relay(7);

    console.log('setting up relay pin 8 - bot3')
    bot3 = new five.Relay(8);

    console.log('setting up relay pin 9 - bot4')
    bot4 = new five.Relay(9);

    console.log('setting up relay pin 10 - bot5')
    bot5 = new five.Relay(10);

    console.log('setting up relay pin 11 - blender_on_button')
    blender_on_button = new five.Relay(11);
    
    console.log('setting up relay pin 4 - blender_off_button')
    blender_off_button = new five.Relay(4);
    

      this.repl.inject({
        // milk
        bot1 : bot1,
        // coffee base
        bot2 : bot2,
        // coffee
        bot3 : bot3,
        // caramel sauce
        bot4 : bot4,
        // mocha sauce
        bot5 : bot5,
        // blender on button
        blender_on_button : blender_on_button,
        // blender off button
        blender_off_button : blender_off_button,
      });
      console.log("Components initialized");
});

console.log("\n Connecting to the arduino...");

function mocha(){
    // amount of milk
    bot1.on();
    setTimeout(function(){bot1.off()},2000);
    // amount of coffee base
    bot2.on();
    setTimeout(function(){bot2.off()},2000);
    // amount of mocha sauce
    bot4.on()
    setTimeout(function(){bot4.off()},2000);
    // amount of coffee
    bot3.on()
    setTimeout(function(){bot3.off()},2000);

   // key press duration for on
    setTimeout(function(){
        blender_on_button.on();
        setTimeout(function(){blender_on_button.off()},3000);
    },2000);
    // key press duration for off
    setTimeout(function(){
        blender_off_button.on();
        setTimeout(function(){blender_off_button.off()},3000);
    },4000);
    

}

function caramel(){
    // amount of milk
    bot1.on();
    setTimeout(function(){bot1.off()},2000);
    // amount of coffee base
    bot2.on();
    setTimeout(function(){bot2.off()},2000);
    // amount of mocha sauce
    bot5.on()
    setTimeout(function(){bot5.off()},2000);
    // amount of coffee
    bot3.on()
    setTimeout(function(){bot3.off()},2000);

          // key press duration for on
    setTimeout(function(){
        blender_on_button.on();
        setTimeout(function(){blender_on_button.off()},3000);
    },2000);
    // key press duration for off
    setTimeout(function(){
        blender_off_button.on();
        setTimeout(function(){blender_off_button.off()},3000);
    },4000);
    


}

function coffee(){
    // amount of milk
    bot1.on();
    setTimeout(function(){bot1.off()},2000);
    // amount of coffee base
    bot2.on();
    setTimeout(function(){bot2.off()},2000);
    // amount of coffee
    bot3.on()
    setTimeout(function(){bot3.off()},2000);

        // key press duration for on
    setTimeout(function(){
        blender_on_button.on();
        // the below value is for how long to broadcast blend signal
        setTimeout(function(){blender_on_button.off()},3000);
        //the below value is for how long after the syrups start that the blender must wait
        // i.e. longest of the syrups turn off time
    },2000);

    // key press duration for off
    setTimeout(function(){
        blender_off_button.on();
        setTimeout(function(){blender_off_button.off()},3000);
    // blend duration (minus blend start time set above
    },4000);
    
}